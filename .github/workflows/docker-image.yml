name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_TOKEN }}
    
    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v2.2.1
      
    - name: Download Java
      run: |
        mkdir -p dep/arm/archive
        mkdir -p dep/amd/archive

        wget -O dep/arm/archive/java17.tar.gz "https://cdn.azul.com/zulu-embedded/bin/zulu17.38.21-ca-jre17.0.5-linux_aarch32hf.tar.gz"
        wget -O dep/amd/archive/java17.tar.gz "https://cdn.azul.com/zulu/bin/zulu17.38.21-ca-jre17.0.5-linux_x64.tar.gz"
      shell: bash
      
    - name: Extract Java
      run: |
        mkdir -p dep/arm/java
        mkdir -p dep/amd/java

        tar -xzf dep/arm/archive/java17.tar.gz  --strip-components=1 -C dep/arm/java
        tar -xzf dep/amd/archive/java17.tar.gz  --strip-components=1 -C dep/amd/java
      shell: bash

    - name: Build the Docker image
      run: docker buildx build --push --platform=linux/amd64,linux/arm64,linux/arm/v7 --progress=plain --no-cache -t bskjon/dnj:latest .

